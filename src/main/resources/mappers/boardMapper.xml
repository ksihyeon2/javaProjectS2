<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS2.dao.BoardDAO">
	<select id="getTotRecCnt" resultType="int">
		select count(*) from board;
	</select>
	<select id="getBoardList" resultType="com.spring.javaProjectS2.vo.BoardVO">
		<if test="part == ''">
			select *, datediff(wDate,now()) as date_diff, timestampdiff(hour, wDate, now()) as hour_diff, (select count(*) from reply where boardIdx = board.idx) as replyCnt from board where openSw = 'OK' and delCheck = 'NO' and part != '공지' order by idx desc limit #{startIndexNo}, #{pageSize};
		</if>
		<if test="part != ''">
			select *, datediff(wDate,now()) as date_diff, timestampdiff(hour, wDate, now()) as hour_diff, (select count(*) from reply where boardIdx = board.idx) as replyCnt from board where openSw = 'OK' and delCheck = 'NO' and part = #{part} or part = '공지' order by part = '공지' desc limit #{startIndexNo}, #{pageSize};
		</if>
	</select>
	<select id="getBoardContent" resultType="com.spring.javaProjectS2.vo.BoardVO">
		select * from board where idx = #{idx};
	</select>
	<select id="getPreNextSearch" resultType="com.spring.javaProjectS2.vo.BoardVO">
		<if test="str == 'preVO'">
		select idx,title from board where <![CDATA[idx<#{idx}]]> order by idx desc limit 1;
		</if>
		<if test="str != 'preVO'">
		select idx,title from board where <![CDATA[idx>#{idx}]]> order by idx limit 1;
		</if>
	</select>
	<select id="getBoardComplanit" resultType="com.spring.javaProjectS2.vo.ComplaintVO">
		select * from complaint where complaintidx = #{idx} and complaintMid = #{complaintMid};
	</select>
	<select id="getBoardGoodCheck" resultType="com.spring.javaProjectS2.vo.GoodcheckVO">
		select * from goodcheck where contentidx = #{idx}	and nickName = #{nickName};
	</select>
	<select id="getBoardParentReplyCheck" resultType="com.spring.javaProjectS2.vo.ReplyVO">
		select * from reply where boardIdx = #{boardIdx} order by idx desc limit 1;
	</select>
	<select id="getBoardReplyList" resultType="com.spring.javaProjectS2.vo.ReplyVO">
		select *, datediff(wDate, now()) as date_diff, timestampdiff(hour, wDate, now()) as hour_diff from reply where boardIdx = #{idx} order by re_order desc;
	</select>
	<select id="getboardDelBox" resultType="com.spring.javaProjectS2.vo.BoardVO">
		select * from board where nickName = #{nickName} and delCheck = 'OK' order by idx;
	</select>
	<select id="getboardMyList" resultType="com.spring.javaProjectS2.vo.BoardVO">
		select * from board where mid = #{mid} order by idx desc;
	</select>
	<select id="getBoardCnt" resultType="int">
		select count(*) from board where mid = #{mid} and delCheck = 'NO';
	</select>
	<select id="getTotRecCntSearch" resultType="int">
		select count(*) from board where #{search} like concat('%'#{searchString},'%');
	</select>
	<select id="getBoardSearchList" resultType="com.spring.javaProjectS2.vo.BoardVO">
		<if test="search == ''">
			select * from board where nickName like concat('%',#{searchString},'%') or title like concat('%',#{searchString},'%') or content like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test="search != ''">
			select * from board where ${search} like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo},#{pageSize};
		</if>
	</select>
	<select id="getNoticeList" resultType="com.spring.javaProjectS2.vo.BoardVO">
		select *, datediff(wDate, now()) as date_diff, timestampdiff(hour, wDate, now()) as hour_diff from board where part = '공지' and openSw = 'OK' order by idx;
	</select>
	

	<!-- insert -->
	<insert id="setBoardInput">
		insert into board values(default,#{vo.mid},#{vo.nickName},#{vo.title},#{vo.content},#{vo.part},#{vo.openSw},default,default,default,default,default);
	</insert>
	<insert id="setBoardComplaint">
		insert into complaint values(default,#{vo.complaintidx},#{vo.complaintMid},#{vo.complaintType},#{vo.complaintPart},#{vo.complaintText},default,default);
	</insert>
	<insert id="setContentGoodCheck">
		insert into goodcheck values(default,#{idx},#{nickName},now());
	</insert>
	<insert id="setBoardReplyInput">
		insert into reply values(default,#{replyVO.boardIdx},#{replyVO.re_step},#{replyVO.re_order},#{replyVO.nickName},default,#{replyVO.content});
	</insert>
	
	
	
	<!-- update -->
	<update id="setReadNumPlus">
		update board set readNum = readNum+1 where idx = #{idx};
	</update>
	<!-- <update id="setBoardContentDel">
		update board set delCheck = 'OK', delDate = now() where idx = #{idx} and mid = #{mid};
	</update> -->
	<update id="setBoardContentGoodCheck">
		<if test="goodCheck == 'OK'">
			update board set good = good+1 where idx = #{idx};
		</if>
		<if test="goodCheck != 'OK'">
			update board set good = good-1 where idx = #{idx};
		</if>
	</update>
	<update id="setReplyOrderUpdate">
		update reply set re_order = re_order + 1 where boardIdx = #{boardIdx} and re_order > #{re_order};
	</update>
	<!-- <update id="setBoardMyContentDel">
		update board set delCheck = 'OK', delDate = now() where mid = #{mid} and idx = #{delidx};
	</update> -->
	<update id="setBoardContentDel">
		update board set delCheck = 'OK', delDate = now() where mid = #{mid} and idx = #{idx};
	</update>
	<update id="setBoardOpenSwChange">
		<if test="openSw == 'OK'">
			update board set openSw = 'NO' where idx = #{idx};
		</if>
		<if test="openSw == 'NO'">
			update board set openSw = 'OK' where idx = #{idx};
		</if>
	</update>
	<update id="setBoardContentDelNo">
		update board set delCheck = 'NO', openSw = 'NO' where idx = #{idx};
	</update>
	
	<!-- delete -->
	<delete id="setContentGoodCheckDel">
		delete from goodcheck where contentidx = #{idx} and nickName = #{nickName}; 
	</delete>
	<delete id="getBoardReplyDelete">
		delete from reply where idx = #{idx} and nickName = #{nickName};
	</delete>
	<delete id="complaintContentDel">
		delete from board where idx = #{idx};
	</delete>
	<delete id="setBoardContentPermanentDel">
		delete from board where mid = #{mid} and idx = #{idx};
	</delete>
	
</mapper>
